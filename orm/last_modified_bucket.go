package orm

import (
	"github.com/iov-one/weave"
	"github.com/iov-one/weave/errors"
)

type HeightBinder func(uint64)

type lastModifiedBucket struct {
	BaseBucket
	currentHeight uint64
}

func WithLastModified(b BaseBucket) (XLastModifiedBucket, HeightBinder) {
	lmBucket := &lastModifiedBucket{
		BaseBucket: b,
	}
	return lmBucket, lmBucket.Bind
}

type metadataAware interface {
	// GetMetadata returns a metadata information about given entity. This
	// method is generated by the protobuf compiler for every message that
	// has a metadata field.
	GetMetadata() *weave.Metadata
}

// Bin sets the new height
func (b *lastModifiedBucket) Bind(newHeight uint64) {
	b.currentHeight = newHeight
}

func (b *lastModifiedBucket) Save(db weave.KVStore, model Object) error {
	if model == nil || model.Value() == nil {
		return b.BaseBucket.Save(db, model)
	}
	// handle non nil values
	m, ok := model.Value().(metadataAware)
	if !ok {
		return errors.Wrap(errors.ErrModel, "model cannot be updated with last modification")
	}
	meta := m.GetMetadata()
	if meta == nil {
		return errors.Wrapf(errors.ErrMetadata, "%T metadata is nil", m)
	}
	meta.LastModified = b.currentHeight
	return b.BaseBucket.Save(db, model)
}
